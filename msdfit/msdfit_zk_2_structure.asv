% msdfit_zk_2_structure works together with MSD3D_boostrap.m. It takes a
% structure contains Dt,Dx, stdDx and use the 2nd stage model to do fit. 
%

function fit = msdfit_zk_2_structure(dif);
lightcolor=[204,204,255;204,255,204;255,204,204;204,255,255;255,204,255;255,255,204;204,204,204];
lightcolor=lightcolor/255;
darkcolor=[0 0 1;0 1 0;1 0 0;0 1 1;1 0 1;1 1 0;0 0 0];
lightcolor=[204,204,255;204,255,204;255,204,204;153,255,204;255,204,255;255,255,204;204,204,204];
lightcolor=lightcolor/255;
wx=1./dif.stdDX.^2;
wy=1./dif.stdDY.^2;
wz=1./dif.stdDZ.^2;

wDX=wx.^0.5.*dif.DX;
wDY=wy.^0.5.*dif.DY;
wDZ=wz.^0.5.*dif.DZ;
if isfie
dt=dif.DT;
for j=1:1:2
        beta_i(j,1)=3.4;
        beta_i(j,2)=0.1;
        beta_i(j,3)=60;
        beta_i(j,4)=1000;
end
j=3;
beta_i(j,1)=3.4;
beta_i(j,2)=0.1;
beta_i(j,3)=60;
beta_i(j,4)=1000;

options=statset('nlinfit');
options.MaxIter=1000;

f2fitx=@(beta,t) wx.^0.5.*g_2(beta,t);
f2fity=@(beta,t) wy.^0.5.*g_2(beta,t);
f2fitz=@(beta,t) wz.^0.5.*g_2(beta,t);
%check=beta_i(4)^2-4*beta_i(3)*beta_i(4)
beta_estX = nlinfit(dt, wDX, f2fitx, beta_i(1,:),options);
beta_estY = nlinfit(dt, wDY, f2fity, beta_i(2,:),options);
beta_estZ = nlinfit(dt, wDZ, f2fitz, beta_i(3,:),options);
fit.Dx=beta_estX(1);fit.nx=beta_estX(2);fit.gammaCx=beta_estX(3);fit.gammaPx=beta_estX(4);
fit.Lx = sqrt(fit.Dx * (fit.gammaCx+fit.gammaPx) + fit.nx^2.*fit.gammaCx/2);
fit.Dy=beta_estY(1);fit.ny=beta_estY(2);fit.gammaCy=beta_estY(3);fit.gammaPy=beta_estY(4);
fit.Ly = sqrt(fit.Dy * (fit.gammaCy+fit.gammaPy) + fit.ny^2.*fit.gammaCy/2);
fit.Dz=beta_estZ(1);fit.nz=beta_estZ(2);fit.gammaCz=beta_estZ(3);fit.gammaPz=beta_estZ(4);
fit.Lz = sqrt(fit.Dz * (fit.gammaCz+fit.gammaPz) + fit.nz^2.*fit.gammaCz/2);

plot_flag=1;
if plot_flag
    figure(8611);clf;hold on;
    g_z=@g_2;
    hold on;
    dT=dif.DT;
    %figure;hold all;
    shadedErrorBar_zk_simple(dif.DT,dif.DX,dif.stdDX,{'Color',darkcolor(1,:),'LineWidth',2});
    shadedErrorBar_zk_simple(dif.DT,dif.DY,dif.stdDY,{'Color',darkcolor(2,:),'LineWidth',2});
    shadedErrorBar_zk_simple(dif.DT,dif.DZ,dif.stdDZ,{'Color',darkcolor(3,:),'LineWidth',2});
    plot(log10(dt), g_z(beta_estX, dt), '--b','LineWidth',2);
    plot(log10(dt), g_z(beta_estY, dt), '--g','LineWidth',2);
    plot(log10(dt), g_z(beta_estZ, dt), '--r','LineWidth',2);

    %legend('MSDx','MSDy','MSDz');
end

return;

function y = g_1(beta, t);
D = beta(1);
n = beta(2);
gamma_c = beta(3);

y = D - D/gamma_c*(1-n^2*gamma_c^2/(2*D))*(1-exp(-gamma_c*t))./t;

return;

function y = g_2(beta, t);

D = beta(1);
n = beta(2);
gamma_c = beta(3);
gamma_p = beta(4);

nu = sqrt(gamma_p^2 - 4*gamma_c*gamma_p);

a=nu-gamma_p;
b=nu+gamma_p;

y=D-D./t.*(1/nu).*(exp(a*t/2)-exp(-b*t/2))-(D./t).*(1/gamma_p - 1/gamma_c + n^2*gamma_c/(2*D)).* (0.5*exp(a*t/2)+0.5*exp(-b*t/2)+gamma_p*(1/nu)*0.5*(exp(a*t/2)-exp(-b*t/2))-1);
%  y = D - D./t .* (2./nu*sinh(nu*t/2).*exp(-gamma_p*t/2) + (1/gamma_p - 1/gamma_c + n^2*gamma_c/(2*D)) .* ...
%           (-1 + exp(-gamma_p*t/2).*(cosh(nu*t/2) + gamma_p/nu*sinh(nu*t/2))));
return;
