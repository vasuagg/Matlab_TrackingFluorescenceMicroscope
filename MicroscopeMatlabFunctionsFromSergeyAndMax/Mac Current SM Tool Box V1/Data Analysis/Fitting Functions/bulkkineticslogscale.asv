function  output = bulkkineticslogscale(datasource, fps,unfoldx,unfoldticks,foldx,foldticks,title,fitdouble,fitstretched,...
    fittriple,doubleguess,stretchedguess,tripleguess)
% a script to break the data into sorted files
% output = kinanyfps2(datasource, concentration, fps)
% datasource - filename of data
% concentration - the concentration of that datasource
% output concentration | singlefitunfold(k)| doublefitunfold (A1,k1,A2,k2)|
% singlefitfold doublefitfold timetotalhigh totaldwellshigh timetotallow
% totaldwellslow 




% Create figure

figure1 = figure('Color',[1 1 1],'Name', title,'PaperPosition',[0 0 6 5],'papersize',[6 5]);
 
% Create axes - High FRET dwells
axes1 = axes('FontName','Arial','FontSize',10,'Position',[0.1 0.55 0.3 0.3],'Parent',figure1,...
    'Visible','on','box','on','XScale','log', 'YScale','linear','XMinorTick','on');
%%Added Max 112707 Want To Plot Residuals
axes2 = axes('FontName','Arial','FontSize',10,'Position',[0.1 0.55 0.3 0.3],'Parent',figure1,...
    'Visible','on','box','off','XScale','log','color','none','YAxisLocation','right','XMinorTick','on','Xtick',unfoldticks);

ylim(axes1,[0 1]);
xlim(axes1,[0.01 unfoldx]);
ylabel(axes1,'Normalized counts (cumulative)');
hold(axes1,'all');
 
%%Added Max 112707 Want To Plot Residuals
ylim(axes2,[-0.25 0.25]);
xlim(axes2,[0.01 unfoldx]);
xlabel(axes2,'Dwell time (s)');
ylabel(axes2,'Residuals');
hold(axes2,'all');
%%End Added Max 112707 Want To Plot Residuals

% Create scatter

axes3 = axes('FontName','Arial','FontSize',10,'Position',[0.59 0.55 0.3 0.3],'Parent',figure1,'box','on',...
    'XScale','log', 'YScale','linear');

%%Added Max 112707 Want To Plot Residuals
axes4 = axes('FontName','Arial','FontSize',10,'Position',[0.59 0.55 0.3 0.3],'Parent',figure1,'box','off',...
    'XScale','log','color','none','YAxisLocation','right','XMinorTick','on','Xtick',foldticks);
%%End Added Max 112707 Want To Plot Residuals

ylim(axes3,[0 1]);
xlim(axes3,[0.01 foldx]);
%ylim(axes4,[0 1.1]);
%xlabel(axes2,'Dwell time (s)');
ylabel(axes3,'Normalized counts (cumulative)');
hold(axes3,'all');
%hold(axes4,'all');

%%Added Max 112707 Want To Plot Residuals
ylim(axes4,[-0.25 0.25]);
xlim(axes4,[0.01 foldx]);
%ylim(axes8,[-0.2 0.2]);
xlabel(axes4,'Dwell time (s)');
ylabel(axes4,'Residuals');
hold(axes4,'all');
%hold(axes8,'all');
%%End Added Max 112707 Want To Plot Residuals

% Create scatter


frame = 1/fps(1);

%I don' know what this does and commeted it out without too much thought

% if regexpi(datasource, 'refold') ~= 0
%     backwards = 1
% elseif regexpi(datasource, 'shorten') ~= 0
%     backwards = 1
% else
%     backwards = 0
% % regexpi(str, 'c[aeiou]+t')
% end



%concentration=25; % this is just a place holder
%first grab the data
tempdata =[];
for i=1:size(datasource,1)

    temp=[];
    temp = datasource{i};
    tempdata = [tempdata; temp(11:end,:)];

end

    A= tempdata;

% then sort it
sorted= sortrows(A,1);

%  find the low/high breakpoint
low = find(sorted,1) - 1;

% create a low fret array
lowsorted = sorted(1:low,:);
%create the high fret array
highsorted = sorted(low+1:end,:);

%switch refolding
%I don' know what this does and commeted it out without too much thought

% if backwards == 1
%     temp = lowsorted;
%     lowsorted = highsorted;
%     highsorted = temp;
% end


% find the frequency data
    % grab the dwells times into a single array, and divide by the frame rate
highfretdwells = highsorted(:,2)'/fps(1);
lowfretdwells = lowsorted(:,2)'/fps(1);
   %create a the bin centers vectors from 0 to a value
   
    % get a table of frequency data
hightable = tabulatebetter(highfretdwells);
lowtable = tabulatebetter(lowfretdwells);

% This code fills in dwell time that dont have an observed transition with
% the fraction of events of the earliest real observation
% 120407 This was commented out by Greenfeld, this does not seem to be a
% legit way of processing data


% % % % % % % % % % % % % % % % % % % % 
% fill in the zeros on the table
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

longestdwellhigh = max(hightable(:,1));

hightable;
longestdwelllow = max(lowtable(:,1));

timetotalhigh = sum(highsorted(:,2))/fps(1);    
timetotallow  = sum(lowsorted(:,2))/fps(1);

%number of dwells
totaldwellshigh = size(highsorted,1);
totaldwellslow = size(lowsorted,1);

%  Auto-generated by MATLAB on 23-Jun-2005 08:47:11
 %title = [num2str(concentration) ' mM Metal kinetics' num2str(fps) ' fps'];

%scatter3 = scatter(hightable(:,1),hightable(:,4),'Parent',axes3,'Marker','square','MarkerEdgeColor',...
%[0 0 0],'SizeData',[24],'DisplayName','unfoldingslow');
  
scatter1 = scatter(hightable(:,1),hightable(:,4),'Parent',axes1,'Marker','square','MarkerEdgeColor',...
    [0 0 0],'SizeData',[24],'DisplayName','unfoldingfast');

scatter4 = scatter(lowtable(:,1),lowtable(:,4),'Parent',axes3,'Marker','o','SizeData',[24],'MarkerEdgeColor',...
[0 0 0],'DisplayName','foldingslow');


% scatter4 = scatter(lowtable(:,1),lowtable(:,4),'Parent',axes3,'Marker','square','MarkerEdgeColor',...
% [0 0 0],'DisplayName','foldingslow');


a = [num2str(timetotalhigh) ' s'];
b = [num2str(totaldwellshigh) ' dwells'];
%h = ['# Molecules = ' num2str(numbermolecules)];
c = [num2str(timetotallow) ' s'];
d = [num2str(totaldwellslow) ' dwells'];
%h = ['# Molecules = ' num2str(numbermolecules)];

annotation3 = annotation(figure1,'textbox','Position',[0.25 0.5 0.0 0],'FitHeightToText','on','String',{a,b},'LineStyle','none',...
    'VerticalAlignment','baseline','FontSize',10,'Color','k');
annotation4 = annotation(figure1,'textbox','Position',[0.79 0.5 0 0],'FitHeightToText','on','String',{c,d},'LineStyle','none',...
    'VerticalAlignment','baseline','FontSize',10,'Color','k');

annotation5 = annotation(figure1,'textbox','Position',[0.1 0.86 0.35 0.05],'String','Unfolding','LineStyle','None','FontSize',14,...
'HorizontalAlignment','center');
annotation6 = annotation(figure1,'textbox','Position',[0.59 0.86 0.35 0.05],'String','Folding','LineStyle','None','FontSize',14,...
'HorizontalAlignment','center','Color','g');  


annotation(figure1,'textbox','Position',[0.1 .95 0.99 0.03],'FitHeightToText','on','String',strcat(title, ' Bulk Kinetics'),'LineStyle','none');
clipboard('copy',strcat(title, ' Bulk Kinetics'))



%   fit with single and double exponenetials
options = optimset('LevenbergMarquardt','on','TolFun',0.0000000001,'MaxFunEvals',...
1000000,'TolX',1e-9,'MaxIter',1000,'Display','Final');
%                         
%                         [tripplefithigh, resnormhigh] = lsqcurvefit(@tripleexponential,[0.6,3,0.1],hightable(:,1),hightable(:,4),...
%[0 0.001 0.001],[1 fps fps],options); %lsqcurvefit(@function,[GUESSES],xdata,ydata)
%                         resnormhigh
%                         tripplefithighval = [tripple 0];
%                         tripplefithighval(4) = tripplefithigh(3);
%                         tripplefithighval(3) = (1-tripplefithigh(1));
%                   
                        
          
                        
                        
[singlefithigh resnormhighsingle singleresidualhigh]= lsqcurvefit(@singleexponential,[1],hightable(:,1),hightable(:,4));
resnormhighsingle
xvalueshigh=hightable(:,1);
ysinglehigh=(singleexponential(singlefithigh,xvalueshigh));
            
   
[singlefitlow resnormlowsingle singleresiduallow] = lsqcurvefit(@singleexponential,[1],lowtable(:,1),lowtable(:,4));
resnormlowsingle
xvalueslow=lowtable(:,1);
ysinglelow=(singleexponential(singlefitlow,xvalueslow));
                        %singleresiduallow = lowtable(:,4)-ysingle;


% Create plot single exponential
plot2 = plot(xvalueshigh,ysinglehigh,'Color',[1 0 0],'LineWidth',2,'Parent',axes1,'DisplayName','single exponential');
plot6 = plot(xvalueshigh,singleresidualhigh,'--r','Parent',axes2,'DisplayName','single exponential','LineWidth',2);


% Create plot single exponential
plot2 = plot(xvalueslow,ysinglelow,'Color',[1 0 0],'LineWidth',2,'Parent',axes3,'DisplayName','single  exponential');
plot8 = plot(xvalueslow,singleresiduallow,'--r','Parent',axes4,'DisplayName','single exponential','LineWidth',2);



%create annotation labels
a = ['k = ' num2str(round(100*singlefithigh)/100)];
% b = ['A_{1} = ' num2str(round(100*doublefithighval(1))/100)];
% c = ['k_{1} = ' num2str(round(100*doublefithighval(2))/100)];
% d = ['A_{2} = ' num2str(round(100*doublefithighval(3))/100)];
% e = ['k_{2} = ' num2str(round(100*doublefithighval(4))/100)];

% Create textbox
annotation1 = annotation(figure1,'textbox','Position',[0.1 0.5 0 0],'FitHeightToText','on','String',{a},'LineStyle','none',...
       'VerticalAlignment','baseline','FontSize',10,'Color','r');
    

a = ['k = ' num2str(round(100*singlefitlow)/100)];
% b = ['A_{1} = ' num2str(round(100*doublefitlowval(1))/100)];
% c = ['k_{1} = ' num2str(round(100*doublefitlowval(2))/100)];
% d = ['A_{2} = ' num2str(round(100*doublefitlowval(3))/100)];
% e = ['k_{2} = ' num2str(round(100*doublefitlowval(4))/100)];

annotation2 = annotation(figure1,'textbox','Position',[0.59 0.5 0 0],'FitHeightToText','on','String',{a},'LineStyle','none',...
       'VerticalAlignment','baseline','FontSize',10,'Color','r');


qoverlay = strcmp(fitstretched, 'fit_stretched');
if  qoverlay == 1;
   
[stretchedfithigh resnormhigh stretchedresidualhigh] = lsqcurvefit(@stretchedexponential,stretchedguess,hightable(:,1),hightable(:,4),...
    [0 0.001 ],[fps(2) 100  ],options); %lsqcurvefit(@function,[GUESSES],xdata,ydata)
resnormhigh
xvalueshigh=hightable(:,1);
%stretchedfithighval = [stretchedfithigh 0];
%stretchedfithighval(4) = stretchedfithigh(3);
%stretchedfithighval(3) = (1-stretchedfithigh(1));
ystretchedhigh=(stretchedexponential(stretchedfithigh,xvalueshigh));


%   fit with single and double exponenetials
options = optimset('LevenbergMarquardt','on','TolFun',0.0000000001,'MaxFunEvals',1000000,'MaxIter',1000,'Display','Final');
[stretchedfitlow, resnormlow, stretchedresiduallow] = lsqcurvefit(@stretchedexponential,stretchedguess,lowtable(:,1),lowtable(:,4),...
    [0 0.001 ],[fps(2) 100  ],options);
%residuallow;
xvalueslow=lowtable(:,1);
%stretchedfitlowval = [stretchedfitlow 0];
%stretchedfitlowval(4) = stretchedfitlow(3);
%stretchedfitlowval(3) = (1-stretchedfitlow(1));
%doubleresidual = lowtable(:,4)-ydouble;
ystretchedlow=(stretchedexponential(stretchedfitlow,xvalueslow)); 
    
% Create plot double exponential
plot1 = plot(xvalueshigh,ystretchedhigh,'Color','m','LineWidth',2,'Parent',axes1,'DisplayName','double exponential');
plot5 = plot(xvalueshigh,stretchedresidualhigh,'--m','Parent',axes2,'DisplayName','double exponential','LineWidth',2);

                
% Create plot double exponential
plot1 = plot(xvalueslow,ystretchedlow,'Color','m','LineWidth',2,'Parent',axes3,'DisplayName','double exponential');
plot7 = plot(xvalueslow,stretchedresiduallow,'--m','Parent',axes4,'DisplayName','double exponential','LineWidth',2);
   

%create annotation labels
%a = ['k = ' num2str(round(100*singlefithigh)/100)];
b = ['A_{1} = ' num2str(round(100*stretchedfithigh(1))/100) '   \beta = ' num2str(round(100*stretchedfithigh(2))/100)];

% Create textbox
annotation1 = annotation(figure1,'textbox','Position',[0.1 0.42 0 0],'FitHeightToText','on','String',{b},'LineStyle','none',...
'VerticalAlignment','baseline','FontSize',10,'Color','m');   

%create annotation labels
b = ['A_{1} = ' num2str(round(100*stretchedfitlow(1))/100)  '   \beta = ' num2str(round(100*stretchedfitlow(2))/100)];

annotation2 = annotation(figure1,'textbox','Position',[0.59 0.42 0 0],'FitHeightToText','on','String',{b },'LineStyle','none',...
'VerticalAlignment','baseline','FontSize',10,'Color','m');   







    
    
    
end
   
   
   
   

qoverlay = strcmp(fitdouble, 'fit_double');
if  qoverlay == 1;

[doublefithigh resnormhigh doubleresidualhigh] = lsqcurvefit(@doubleexponential,doubleguess,hightable(:,1),hightable(:,4),...
    [0 0.001 0.001],[1 fps(2) fps(2)],options); %lsqcurvefit(@function,[GUESSES],xdata,ydata)
resnormhigh
xvalueshigh=hightable(:,1);
doublefithighval = [doublefithigh 0];
doublefithighval(4) = doublefithigh(3);
doublefithighval(3) = (1-doublefithigh(1));
ydoublehigh=(doubleexponential(doublefithigh,xvalueshigh));

 
%   fit with single and double exponenetials
options = optimset('LevenbergMarquardt','on','TolFun',0.0000000001,'MaxFunEvals',1000000,'MaxIter',1000,'Display','Final');
[doublefitlow, resnormlow, doubleresiduallow] = lsqcurvefit(@doubleexponential,doubleguess,lowtable(:,1),lowtable(:,4),...
    [0 .001 0.001],[1 fps(2) fps(2)],options);
%residuallow;
xvalueslow=lowtable(:,1);
doublefitlowval = [doublefitlow 0];
doublefitlowval(4) = doublefitlow(3);
doublefitlowval(3) = (1-doublefitlow(1));
%doubleresidual = lowtable(:,4)-ydouble;
ydoublelow=(doubleexponential(doublefitlow,xvalueslow));      
                  
      
% Create plot double exponential
plot1 = plot(xvalueshigh,ydoublehigh,'Color',[0 0 1],'LineWidth',2,'Parent',axes1,'DisplayName','double exponential');
plot5 = plot(xvalueshigh,doubleresidualhigh,'--b','Parent',axes2,'DisplayName','double exponential','LineWidth',2);

                
% Create plot double exponential
plot1 = plot(xvalueslow,ydoublelow,'Color',[0 0 1],'LineWidth',2,'Parent',axes3,'DisplayName','double exponential');
plot7 = plot(xvalueslow,doubleresiduallow,'--b','Parent',axes4,'DisplayName','double exponential','LineWidth',2);


%plot7 = scatter(xvalues,doubleresidual,'Parent',axes7,'DisplayName','double exponential','Marker','o','MarkerEdgeColor',[0 0 1],'SizeData',[24]);
%plot8 = scatter(xvalues,singleresidual,'Parent',axes7,'DisplayName','single exponential','Marker','o','MarkerEdgeColor',[1 0 0],'SizeData',[24]);




%create annotation labels
%a = ['k = ' num2str(round(100*singlefithigh)/100)];
b = ['A_{1} = ' num2str(round(100*doublefithighval(1))/100) '   k_{1} = ' num2str(round(100*doublefithighval(2))/100)];
%c = ['k_{1} = ' num2str(round(100*doublefithighval(2))/100)];
d = ['A_{2} = ' num2str(round(100*doublefithighval(3))/100) '   k_{2} = ' num2str(round(100*doublefithighval(4))/100)];
%e = ['k_{2} = ' num2str(round(100*doublefithighval(4))/100)];

% Create textbox
annotation1 = annotation(figure1,'textbox','Position',[0.1 0.42 0 0],'FitHeightToText','on','String',{b,d},'LineStyle','none',...
'VerticalAlignment','baseline','FontSize',10,'Color','b');   


%create annotation labels
%a = ['k = ' num2str(round(100*singlefitlow)/100)];
b = ['A_{1} = ' num2str(round(100*doublefitlowval(1))/100)  '   k_{1} = ' num2str(round(100*doublefitlowval(2))/100)];
%c = ['k_{1} = ' num2str(round(100*doublefitlowval(2))/100)];
d = ['A_{2} = ' num2str(round(100*doublefitlowval(3))/100)  '   k_{2} = ' num2str(round(100*doublefitlowval(4))/100)];
%e = ['k_{2} = ' num2str(round(100*doublefitlowval(4))/100)];

annotation2 = annotation(figure1,'textbox','Position',[0.59 0.42 0 0],'FitHeightToText','on','String',{b d },'LineStyle','none',...
'VerticalAlignment','baseline','FontSize',10,'Color','b');   


end




qoverlay = strcmp(fittriple, 'fit_triple');
if  qoverlay == 1;

    
[triplefithigh resnormhigh tripleresidualhigh] = lsqcurvefit(@tripleexponential,tripleguess,hightable(:,1),hightable(:,4),...
[0 .001 0 0.001 0.001],[1 fps(2) 1 fps(2) fps(2)],options); %lsqcurvefit(@function,[GUESSES],xdata,ydata)

xvalueshigh=hightable(:,1);
triplefithighval = [triplefithigh 0];
triplefithighval(6) = triplefithigh(5);
triplefithighval(5) = (1-triplefithigh(1)-triplefithigh(3));
ytriplehigh=(tripleexponential(triplefithigh,xvalueshigh));



 
%   fit with single and double exponenetials
options = optimset('LevenbergMarquardt','on','TolFun',0.0000000001,'MaxFunEvals',1000000,'MaxIter',1000,'Display','Final');
[triplefitlow, resnormlow, tripleresiduallow] = lsqcurvefit(@tripleexponential,tripleguess,lowtable(:,1),lowtable(:,4),...
[0 .001 0 0.001 0.001],[1 fps(2) 1 fps(2) fps(2)],options);
%residuallow;
xvalueslow=lowtable(:,1);
triplefitlowval = [triplefitlow 0];
triplefitlowval(6) = triplefitlow(5);
triplefitlowval(5) = (1-triplefitlow(1)-triplefitlow(3));
ytriplelow=(tripleexponential(triplefitlow,xvalueslow));      
                  
      
% Create plot double exponential
plot1 = plot(xvalueshigh,ytriplehigh,'Color',[0 0 1],'LineWidth',2,'Parent',axes1,'DisplayName','double exponential' , 'Color','g');
plot5 = plot(xvalueshigh,tripleresidualhigh,'--b','Parent',axes2,'DisplayName','double exponential','LineWidth',2 , 'Color','g');

                
% Create plot double exponential
plot1 = plot(xvalueslow,ytriplelow,'Color',[0 0 1],'LineWidth',2,'Parent',axes3,'DisplayName','double exponential' , 'Color','g');
plot7 = plot(xvalueslow,tripleresiduallow,'--b','Parent',axes4,'DisplayName','double exponential','LineWidth',2 , 'Color','g');


%create annotation labels
a = ['A_{1} = ' num2str(round(100*triplefithighval(1))/100) '   k_{1} = ' num2str(round(100*triplefithighval(2))/100)];
b = ['A_{2} = ' num2str(round(100*triplefithighval(3))/100) '   k_{2} = ' num2str(round(100*triplefithighval(4))/100)];
c = ['A_{3} = ' num2str(round(100*triplefithighval(5))/100) '   k_{3} = ' num2str(round(100*triplefithighval(6))/100)];

% Create textbox
annotation1 = annotation(figure1,'textbox','Position',[0.1 0.2 0 0],'FitHeightToText','on','String',{a,b,c},'LineStyle','none',...
'VerticalAlignment','baseline','FontSize',10,'Color','g');   


%create annotation labels
a = ['A_{1} = ' num2str(round(100*triplefitlowval(1))/100) '   k_{1} = ' num2str(round(100*triplefitlowval(2))/100)];
b = ['A_{2} = ' num2str(round(100*triplefitlowval(3))/100) '   k_{2} = ' num2str(round(100*triplefitlowval(4))/100)];
c = ['A_{3} = ' num2str(round(100*triplefitlowval(5))/100) '   k_{3} = ' num2str(round(100*triplefitlowval(6))/100)];

annotation2 = annotation(figure1,'textbox','Position',[0.59 0.2 0 0],'FitHeightToText','on','String',{a,b,c },'LineStyle','none',...
'VerticalAlignment','baseline','FontSize',10,'Color','g');   
    
    
    

end











% print things to the open file

% tempfilename=[strcat(title, ' values') '.txt'];
% tempfid1=fopen(tempfilename,'a');
% 
% fprintf(tempfid1,'bulk kinetics start\n');
% fprintf(tempfid1,'ku | %8.3f\n', singlefithigh);
% fprintf(tempfid1,'A1 | %8.3f\n', doublefithighval(1));
% fprintf(tempfid1,'k1 | %8.3f\n', doublefithighval(2));
% fprintf(tempfid1,'k2 | %8.3f\n', doublefithighval(3));
% fprintf(tempfid1,'k2 | %8.3f\n', doublefithighval(4));
% fprintf(tempfid1,'total unfold time | %8.3f\n', timetotalhigh);
% fprintf(tempfid1,'total unfold dwells | %8.3f\n', totaldwellshigh);
% 
% fprintf(tempfid1,'ku | %8.3f\n', singlefitlow);
% fprintf(tempfid1,'A1 | %8.3f\n', doublefitlowval(1));
% fprintf(tempfid1,'k1 | %8.3f\n', doublefitlowval(2));
% fprintf(tempfid1,'k2 | %8.3f\n', doublefitlowval(3));
% fprintf(tempfid1,'k2 | %8.3f\n', doublefitlowval(4));
% fprintf(tempfid1,'total unfold time | %8.3f\n', timetotallow);
% fprintf(tempfid1,'total unfold dwells | %8.3f\n', totaldwellslow);
% 
% fprintf(tempfid1,'bulk kinetics end\n');
% fclose(tempfid1);




% output = [ singlefithigh doublefithighval, singlefitlow doublefitlowval timetotalhigh totaldwellshigh timetotallow totaldwellslow ];
% 

