function [fitting_results,residues]=FCS_twostate_fit(tau,g2)

f2fit=@(para,tau) FCS_twostate(tau,para(1),para(2));

%amplitude of the exp guess
para_1_guess=1e-2;
%rates guess
para_2_guess=10^4;

if size(g2,1)~=1
    %get the average value and weights
    [tau,ave_g2,std_g2,h]=draw_fcs(tau,g2,1,plot_flag);
     %set weights as 1/sigma^2.
     w=1./std_g2.^2;
     %weight the data. 
     wg2=w.^0.5.*ave_g2;
     %weight the model function
       
    f2fit=@(para,tau) w.^0.5.*FCS_twosate(tau,para(1),para(2));
    [para_fit,r]=nlinfit(tau,wg2,f2fit,[para_1_guess,para_2_guess]);
    %output results
    fitting_results{1,1}='two state amp';fitting_results{1,2}=para_fit(1);
    fitting_results{2,1}='two state rate';fitting_results{2,2}=para_fit(2);
    residues{1}=r;wr=w.^0.5.*r;residues{2}=wr; 
    figure(h);hold on;
    semilogx(tau,FCS_twostate(tau,para_fit(1),para_fit(2)),'LineWidth',2);

    


else
    [para_fit,r]=nlinfit(tau,g2,f2fit,[para_1_guess,para_2_guess]);
    figure;
    subplot(2,1,1)
    semilogx(tau,g2,'-or','MarkerSize',4,'MarkerFaceColor','r');
    hold on;
    semilogx(tau,FCS_twostate(tau,para_fit(1),para_fit(2)),'LineWidth',2);
    %title(cd);
    subplot(2,1,2)
    semilogx(tau,r)
end

function g2tau=FCS_twostate(t,A,kk)

g2tau=A.*exp(-kk.*t)+1;

end