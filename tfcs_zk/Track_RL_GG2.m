%Track_RL_GG2 calculates the theoretical tracking-contributed FCS of rotational laser beam, using
%tau, and fit parameters. Note the fit parameters can be generated by
%msdfit_zk.m

function g2=Track_RL_GG2(tau,fit)
%% setting parameters
%rotational f.xy and turning on/off f.z frequency.
w.xy=2*pi*(95*10^3);f.xy=w.xy/2/pi;
w.z=2*pi*(100*10^3);f.z=w.z/2/pi;

%laser waist sizes
waist(1)=1;
waist(2)=1;
waist(3)=pi*waist(1)^2/0.532;

%rotation radius
r=waist(1)/2^0.5;
%2*z0 is the separation distance between the two beams
z0=1.5;



%tracking error
for jj=1:1:length(tau)-1
        d_tau=tau(jj+1)-tau(jj);
        
        ftau=linspace(tau(jj),tau(jj+1),200);
        for j=1:1:3
               st(j,:)=tracking_error_2(ftau,fit(j).D,[fit(j).gammaC,fit(j).gammaP],fit(j).n);
               st0(j)=tracking_error_2(0,fit(j).D,[fit(j).gammaC,fit(j).gammaP],fit(j).n);

               sbt(j,:)=(st(j,:).^2+waist(j)^2/4).^0.5;
               sb0(j)=(st0(j)^2+waist(j)^2/4)^0.5;
        end


        %% using tracking error to generate tFCS
        tri1=triangularwave(ftau,f.z,0);
        tri2=triangularwave(ftau,f.z,1/(2*f.z));


        prefactor=0.5*sb0(1)^2*sb0(2)^2*sb0(3)^2*(sb0(1)^4-st(1,:).^4).^-0.5.*(sb0(2)^4-st(2,:).^4).^-0.5.*(sb0(3)^4-st(3,:).^4).^-0.5;
        expo=exp(-r^2*(sb0(1)^2-st(1,:).^2.*cos(w.xy*ftau))./(sb0(1)^4-st(1,:).^4))*exp(r^2/sb0(1)^2)*exp(z0^2/sb0(1)^2);
        z_contri=tri1.*exp(-z0^2./(sb0(3)^2+st(3,:).^2))+tri2.*exp(-z0^2./(sb0(3)^2-st(3,:).^2));

        gtemp=prefactor.*expo.*z_contri-1;
        g2(jj)=(1/d_tau)*trapz(ftau,gtemp);

end
 g2(length(tau))=g2(length(tau)-1);
    

%%%%%%%%%%%%%%%%%%%%%%%
% 
% ftau=tau;
%         for j=1:1:3
%                st(j,:)=tracking_error_2(ftau,fit(j).D,[fit(j).gammaC,fit(j).gammaP],fit(j).n);
%                st0(j)=tracking_error_2(0,fit(j).D,[fit(j).gammaC,fit(j).gammaP],fit(j).n);
% 
%                sbt(j,:)=(st(j,:).^2+waist(j)^2/4).^0.5;
%                sb0(j)=(st0(j)^2+waist(j)^2/4)^0.5;
%         end
% 
% 
%         %% using tracking error to generate tFCS
%         tri1=triangularwave(ftau,f.z,0);
%         tri2=triangularwave(ftau,f.z,1/(2*f.z));
% 
% 
%         prefactor=0.5*sb0(1)^2*sb0(2)^2*sb0(3)^2*(sb0(1)^4-st(1,:).^4).^-0.5.*(sb0(2)^4-st(2,:).^4).^-0.5.*(sb0(3)^4-st(3,:).^4).^-0.5;
%         expo=exp(-r^2*(sb0(1)^2-st(1,:).^2.*cos(w.xy*ftau))./(sb0(1)^4-st(1,:).^4))*exp(r^2/sb0(1)^2)*exp(z0^2/sb0(1)^2);
%         z_contri=tri1.*exp(-z0^2./(sb0(3)^2+st(3,:).^2))+tri2.*exp(-z0^2./(sb0(3)^2-st(3,:).^2));
% 
%         g2=prefactor.*expo.*z_contri-1;

        
figure;
semilogx(tau,g2)






















































